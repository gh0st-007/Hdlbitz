module top_module (
    input clk,
    input reset,   // Synchronous active-high reset
    output [3:1] ena,
    output [15:0] q);
    
    bcd_digit ones(clk, reset, 1'b1, q[3:0]);
    bcd_digit tens(clk, reset, ena[1], q[7:4]);
    bcd_digit hundreds(clk, reset, ena[2], q[11:8]);
    bcd_digit thousands(clk, reset, ena[3], q[15:12]);

    assign ena[1] = q[3:0] == 4'd9;
    assign ena[2] = (q[3:0] == 4'd9)&(q[7:4] == 4'd9);
    assign ena[3] = ena[2]&(q[11:8] == 4'd9);
    
endmodule

module bcd_digit(input clk, reset, ena,output reg [3:0]q);
    always @(posedge clk) begin
        if(reset)
            q<=4'd0;
        else if(ena) begin
            q<= (q==4'd9)?4'd0:q+4'd1;
    	end
    end
endmodule
