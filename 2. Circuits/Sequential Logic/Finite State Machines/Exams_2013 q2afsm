module top_module (
    input clk,
    input resetn,    // active-low synchronous reset
    input [3:1] r,   // request
    output [3:1] g   // grant
); 
    parameter a=0,b=1,c=2,d=3;
    reg [1:0] state,next;
    always @(posedge clk) begin
        if(~resetn)  state<= a;
        else state<=next;
    end
    
    always @(*) begin
        case(state)
            a: next = r[1] ? b : (r[2] ? c :( r[3] ? d : a));
            b : next = r[1] ? b: a;
            c : next = r[2] ? c: a;
            d : next = r[3] ? d: a;
        endcase
    end
    
    assign g[1] = state == b;
    assign g[2] = state == c;
    assign g[3] = state == d;
  
endmodule
