module top_module(
    input clk,
    input in,
    input reset,    // Synchronous reset
    output done
); 
	parameter idle=0,receiving=1,correct=2,error=3;
    reg [1:0] state,next;
    reg [3:0] counter;
    always @(posedge clk) begin
        if(reset)
            state<=idle;
        else
            state<=next;
    end
    
    always @(*) begin
        case(state)
            idle: next = in?idle:receiving;
            receiving: next = (counter==4'd8)?(in?correct:error):receiving;
            correct: next = in?idle:receiving;
            error: next = in?idle:error;
        endcase
    end
    
    always @(posedge clk) begin
        if(~(state==receiving))
            counter<=4'd0;
        else
            counter<=counter+4'd1;
    end
    
    assign done = (state==correct)   ;
endmodule
